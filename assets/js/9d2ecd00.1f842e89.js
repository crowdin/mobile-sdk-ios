"use strict";(self.webpackChunk_crowdin_mobile_sdk_ios_website=self.webpackChunk_crowdin_mobile_sdk_ios_website||[]).push([[594],{2120:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"guides/debug-and-logging","title":"Debug and Logging","description":"Crowdin iOS SDK provides detailed debug mode - \\"Logs\\" tab in the SDK Controls module and logging into XCode console.","source":"@site/docs/guides/debug-and-logging.md","sourceDirName":"guides","slug":"/guides/debug-and-logging","permalink":"/mobile-sdk-ios/guides/debug-and-logging","draft":false,"unlisted":false,"editUrl":"https://github.com/crowdin/mobile-sdk-ios/tree/master/website/docs/guides/debug-and-logging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Screenshots Automation","permalink":"/mobile-sdk-ios/guides/screenshots-automation"},"next":{"title":"Swift UI Localization guide","permalink":"/mobile-sdk-ios/guides/swift-ui"}}');var i=o(4848),t=o(8453);const d={},l="Debug and Logging",r={},a=[];function g(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"debug-and-logging",children:"Debug and Logging"})}),"\n",(0,i.jsxs)(n.p,{children:['Crowdin iOS SDK provides detailed debug mode - "Logs" tab in the ',(0,i.jsx)(n.a,{href:"/advanced-features/sdk-controls",children:"SDK Controls"})," module and logging into XCode console."]}),"\n",(0,i.jsxs)(n.p,{children:["To enable console logging, add the following option to your ",(0,i.jsx)(n.code,{children:"CrowdinSDKConfig"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:".with(debugEnabled: true)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Crowdin SDK collects log messages for all actions performed by the SDK (login/logout, language downloads, API calls). There is a possibility to set up a callback for these logs. This callback will return log text every time a new log is created. To subscribe to receive log messages, just add a new callback like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'CrowdinSDK.setOnLogCallback { logMessage in\n   print("LOG MESSAGE - \\(logMessage)")\n}\n'})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>l});var s=o(6540);const i={},t=s.createContext(i);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);