"use strict";(self.webpackChunk_crowdin_mobile_sdk_ios_website=self.webpackChunk_crowdin_mobile_sdk_ios_website||[]).push([[645],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var n=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:i,a[1]=p;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1532:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=r(8168),i=(r(6540),r(5680));const o={},a="Example project",p={unversionedId:"example",id:"example",title:"Example project",description:"Crowdin iOS SDK Example project is a simple todo app that illustrates how you can use Crowdin SDK features with a real iOS app. This app's primary purpose is to show the Crowdin SDK integration process in action and test the possibilities it provides.",source:"@site/docs/example.md",sourceDirName:".",slug:"/example",permalink:"/mobile-sdk-ios/example",draft:!1,editUrl:"https://github.com/crowdin/mobile-sdk-ios/tree/master/website/docs/example.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SDK Structure",permalink:"/mobile-sdk-ios/guides/sdk-structure"},next:{title:"Security",permalink:"/mobile-sdk-ios/security"}},s={},l=[{value:"App Overview",id:"app-overview",level:2},{value:"Configuration",id:"configuration",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.yg)(u,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"example-project"},"Example project"),(0,i.yg)("p",null,"Crowdin ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/crowdin/mobile-sdk-ios/tree/master/Example"},"iOS SDK Example project")," is a simple todo app that illustrates how you can use Crowdin SDK features with a real iOS app. This app's primary purpose is to show the Crowdin SDK integration process in action and test the possibilities it provides."),(0,i.yg)("h2",{id:"app-overview"},"App Overview"),(0,i.yg)("p",null,"In the Crowdin iOS SDK Example app, you can create reminders, add them to groups, create location-based reminders, and so on. This Example app is based on ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/atticus183/AppleReminders"},"AppleReminders")," project."),(0,i.yg)("h2",{id:"configuration"},"Configuration"),(0,i.yg)("p",null,"You can find all the needed configuration code in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/crowdin/mobile-sdk-ios/blob/master/Example/AppleReminders/SceneDelegate.swift"},(0,i.yg)("em",{parentName:"a"},"SceneDelegate.swift"))," file. Fill in the following fields using your credentials and run the app."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-swift"},'private let distributionHash = "your_distribution_hash" // Crowdin OTA Content Delivery distribution hash\nprivate let sourceLanguage = "source_language" // Crowdin project source language (e.g. "en")\n    \n// Authentication - use either OAuth credentials or access token\n// OAuth authentication:\nprivate let clientId = "your_client_id" // Crowdin OAuth Client ID (needed for Screenshots and Real-Time Preview features)\nprivate let clientSecret = "your_client_secret" // Crowdin OAuth Client Secret (needed for Screenshots and Real-Time Preview features)\n\n// OR access token authentication (alternative to OAuth):\nprivate let accessToken = "your_access_token" // Crowdin access token (can be used instead of OAuth for Screenshots and Real-Time Preview features)\n')),(0,i.yg)("p",null,"To run the example project, clone the repo, and run ",(0,i.yg)("inlineCode",{parentName:"p"},"pod install")," from the Example directory, then open ",(0,i.yg)("inlineCode",{parentName:"p"},"AppleReminders.xcworkspace"),"."),(0,i.yg)("p",null,"To read more about Crowdin iOS SDK configuration read ",(0,i.yg)("a",{parentName:"p",href:"/setup"},"Setup"),"."))}d.isMDXComponent=!0}}]);