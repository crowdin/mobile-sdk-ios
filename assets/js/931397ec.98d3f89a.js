"use strict";(self.webpackChunk_crowdin_mobile_sdk_ios_website=self.webpackChunk_crowdin_mobile_sdk_ios_website||[]).push([[839],{3444:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>w,default:()=>C,frontMatter:()=>f,metadata:()=>t,toc:()=>b});const t=JSON.parse('{"id":"advanced-features/screenshots","title":"Screenshots","description":"The Screenshots feature enhances the localization workflow by automatically capturing and uploading tagged screenshots from your application to your Crowdin project. This provides translators with valuable visual context, ensuring more accurate and contextually appropriate translations.","source":"@site/docs/advanced-features/screenshots.mdx","sourceDirName":"advanced-features","slug":"/advanced-features/screenshots","permalink":"/mobile-sdk-ios/advanced-features/screenshots","draft":false,"unlisted":false,"editUrl":"https://github.com/crowdin/mobile-sdk-ios/tree/master/website/docs/advanced-features/screenshots.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Real-Time Preview","permalink":"/mobile-sdk-ios/advanced-features/real-time-preview"},"next":{"title":"SDK Controls","permalink":"/mobile-sdk-ios/advanced-features/sdk-controls"}}');var i=r(4848),o=r(8453),s=r(5537),a=r(9329),l=r(8069);const c='let crowdinProviderConfig = CrowdinProviderConfig(hashString: "{your_distribution_hash}",\n    sourceLanguage: "{source_language}",\n    organizationName: "{organization_name}") // Optional. Required for Enterprise only\n\nvar loginConfig: CrowdinLoginConfig\ndo {\n   loginConfig = try CrowdinLoginConfig(clientId: "{client_id}",\n       clientSecret: "{client_secret}",\n       scope: "project.screenshot",\n       redirectURI: "{redirectURI}")\n} catch {\n    print(error)\n    // CrowdinLoginConfig initialization error handling\n}\n\nlet crowdinSDKConfig = CrowdinSDKConfig.config()\n    .with(crowdinProviderConfig: crowdinProviderConfig)\n    .with(screenshotsEnabled: true)\n    .with(loginConfig: loginConfig)\n    .with(settingsEnabled: true)\n\nCrowdinSDK.startWithConfig(crowdinSDKConfig, completion: {\n    // SDK is ready to use, put code to change language, etc. here\n})\n',d='CrowdinProviderConfig *crowdinProviderConfig = [[CrowdinProviderConfig alloc] initWithHashString:@"" sourceLanguage:@"" organizationName:@"{organization_name}"];\n\nNSError *error;\nCrowdinLoginConfig *loginConfig = [[CrowdinLoginConfig alloc]\n    initWithClientId:@"{client_id}"\n    clientSecret:@"{client_secret}"\n    scope:@"project.screenshot"\n    error:&error];\n\nif (!error) {\n    CrowdinSDKConfig *config = [[[[CrowdinSDKConfig config]\n        withCrowdinProviderConfig:crowdinProviderConfig]\n        withScreenshotsEnabled:YES]\n        withLoginConfig:loginConfig];\n\n    [CrowdinSDK startWithConfig:config completion:^{\n        // SDK is ready to use, put code to change language, etc. here\n    }];\n} else {\n    NSLog(@"%@", error.localizedDescription);\n    // CrowdinLoginConfig initialization error handling\n}\n';var h=r(7271),u=r(3895),p=r(5409),g=r(5205);const x='let crowdinProviderConfig = CrowdinProviderConfig(hashString: "{your_distribution_hash}",\n    sourceLanguage: "{source_language}",\n    organizationName: "{organization_name}") // Optional. Required for Enterprise only\n\nlet crowdinSDKConfig = CrowdinSDKConfig.config()\n    .with(crowdinProviderConfig: crowdinProviderConfig)\n    .with(screenshotsEnabled: true)\n    // highlight-next-line\n    .with(accessToken: "your_access_token")\n    .with(settingsEnabled: true)\n\nCrowdinSDK.startWithConfig(crowdinSDKConfig, completion: {\n    // SDK is ready to use, put code to change language, etc. here\n})\n',j='CrowdinProviderConfig *crowdinProviderConfig = [[CrowdinProviderConfig alloc] initWithHashString:@"" sourceLanguage:@"" organizationName:@"{organization_name}"];\n\nCrowdinSDKConfig *config = [[[[CrowdinSDKConfig config]\n    withCrowdinProviderConfig:crowdinProviderConfig]\n    withScreenshotsEnabled:YES]\n    // highlight-next-line\n    withAccessToken:@"your_access_token"];\n',f={},w="Screenshots",m={},b=[{value:"Overview",id:"overview",level:2},{value:"Setup",id:"setup",level:2},{value:"Swift",id:"swift",level:3},{value:"Authorization",id:"authorization",level:2},{value:"OAuth-based Authorization",id:"oauth-based-authorization",level:3},{value:"API Token Authorization",id:"api-token-authorization",level:3},{value:"Custom Screenshot Handler",id:"custom-screenshot-handler",level:2},{value:"Config Options Reference",id:"config-options-reference",level:2},{value:"OAuth Options",id:"oauth-options",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}];function v(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"screenshots",children:"Screenshots"})}),"\n",(0,i.jsx)(n.p,{children:"The Screenshots feature enhances the localization workflow by automatically capturing and uploading tagged screenshots from your application to your Crowdin project. This provides translators with valuable visual context, ensuring more accurate and contextually appropriate translations."}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"The Screenshots feature is intended for development and staging environments only. Enabling this feature in production builds could expose sensitive UI information and impact app performance. For production releases, ensure the Screenshots feature is disabled to maintain security and optimal performance."})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"You can capture and upload tagged screenshots to Crowdin in two ways:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SDK Controls Widget"}),": Use the built-in ",(0,i.jsx)(n.a,{href:"/advanced-features/sdk-controls",children:"SDK Controls"})," UI widget for easy management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Custom Handler"}),": Implement your own screenshot trigger (e.g., an in-app button or gesture, or an automated workflow)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.h3,{id:"swift",children:"Swift"}),"\n",(0,i.jsxs)(n.p,{children:["To enable the Screenshots feature in your application, add the following configuration to your ",(0,i.jsx)(n.code,{children:"Podfile"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",metastring:'title="Podfile"',children:"use_frameworks!\ntarget 'your-app' do\n    pod 'CrowdinSDK'\n    pod 'CrowdinSDK/LoginFeature' // Required for Screenshots\n    pod 'CrowdinSDK/Screenshots' // Required for Screenshots\n    pod 'CrowdinSDK/Settings' // Optional. To add 'settings' button\nend\n"})}),"\n",(0,i.jsx)(n.h2,{id:"authorization",children:"Authorization"}),"\n",(0,i.jsx)(n.p,{children:"The Screenshots feature requires authorization to transmit screenshots to your Crowdin project. Choose from two authorization methods based on your needs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OAuth-based Authorization"}),": Uses ",(0,i.jsx)(n.code,{children:"clientId"})," and ",(0,i.jsx)(n.code,{children:"clientSecret"})," for web-based authorization. This method implements a secure OAuth flow that opens a dialog for users to authorize the application. Best suited for development environments and when user interaction is acceptable."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Token Authorization"}),": Uses the ",(0,i.jsx)(n.code,{children:"accessToken"})," to pass the API Personal Access Token directly. This streamlined method is ideal for automated workflows, CI/CD pipelines, or scenarios where user interaction is not desired."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If both methods are configured, access token authentication takes priority."}),"\n",(0,i.jsx)(n.h3,{id:"oauth-based-authorization",children:"OAuth-based Authorization"}),"\n",(0,i.jsxs)(n.p,{children:["Implements a secure web-based authorization flow using ",(0,i.jsx)(n.code,{children:"clientId"})," and ",(0,i.jsx)(n.code,{children:"clientSecret"}),". This method:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Opens a dialog for user authorization"}),"\n",(0,i.jsx)(n.li,{children:"Provides a secure authentication process"}),"\n",(0,i.jsx)(n.li,{children:"Is ideal for development and testing environments"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To enable OAuth-based authorization, add the following configuration to your ",(0,i.jsx)(n.code,{children:"AppDelegate"})," class:"]}),"\n","\n",(0,i.jsxs)(s.A,{groupId:"language",children:[(0,i.jsx)(a.A,{value:"swift",label:"Swift",children:(0,i.jsx)(l.A,{language:"swift",title:"AppDelegate.swift",children:c})}),(0,i.jsx)(a.A,{value:"obj-c",label:"Objective-C",children:(0,i.jsx)(l.A,{language:"objectivec",children:d})})]}),"\n",(0,i.jsx)(n.p,{children:"For OAuth authentication, you need to handle authorization callback in your application:"}),"\n","\n",(0,i.jsxs)(s.A,{groupId:"language",children:[(0,i.jsx)(a.A,{value:"swift",label:"Swift",children:(0,i.jsx)(l.A,{language:"swift",children:h.A})}),(0,i.jsx)(a.A,{value:"obj-c",label:"Objective-C",children:(0,i.jsx)(l.A,{language:"objectivec",children:u.A})})]}),"\n",(0,i.jsxs)(n.p,{children:["If you are using ",(0,i.jsx)(n.strong,{children:"SceneDelegate"}),", you need to handle callback in the ",(0,i.jsx)(n.strong,{children:"SceneDelegate"})," class implement method:"]}),"\n","\n",(0,i.jsxs)(s.A,{groupId:"language",children:[(0,i.jsx)(a.A,{value:"swift",label:"Swift",children:(0,i.jsx)(l.A,{language:"swift",children:p.A})}),(0,i.jsx)(a.A,{value:"obj-c",label:"Objective-C",children:(0,i.jsx)(l.A,{language:"objectivec",children:g.A})})]}),"\n",(0,i.jsx)(n.h3,{id:"api-token-authorization",children:"API Token Authorization"}),"\n",(0,i.jsxs)(n.p,{children:["A streamlined approach using the ",(0,i.jsx)(n.code,{children:"accessToken"})," option that bypasses OAuth authentication. This method:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Allows direct API token integration"}),"\n",(0,i.jsx)(n.li,{children:"Requires no user interaction"}),"\n",(0,i.jsx)(n.li,{children:"Is perfect for CI/CD pipelines and automated workflows"}),"\n"]}),"\n","\n",(0,i.jsxs)(s.A,{groupId:"language",children:[(0,i.jsx)(a.A,{value:"swift",label:"Swift",children:(0,i.jsx)(l.A,{language:"swift",title:"AppDelegate.swift",children:x})}),(0,i.jsx)(a.A,{value:"obj-c",label:"Objective-C",children:(0,i.jsx)(l.A,{language:"objectivec",children:j})})]}),"\n",(0,i.jsx)(n.h2,{id:"custom-screenshot-handler",children:"Custom Screenshot Handler"}),"\n",(0,i.jsx)(n.p,{children:"You can use one of two methods to take screenshots programmatically:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Basic screenshot capture:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'CrowdinSDK.captureScreenshot(name: String(Date().timeIntervalSince1970)) {\n    print("Screenshot captured")\n} errorHandler: { error in\n    print("Screenshot capture failed with error - " + (error?.localizedDescription ?? ""))\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Capture and update existing screenshot:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'\nCrowdinSDK.captureAndUpdateScreenshot(name: "{screenshot_name}") { result in\n    switch result {\n        case .new: print("New screenshot captured")\n        case .udpated: print("Screenshot updated")\n    }\n} errorHandler: { error in\n    print("Error: \\(error)")\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"captureAndUpdateScreenshot"})," method is useful when you want to update an existing screenshot in your Crowdin project. This can help maintain screenshot organization by updating existing screenshots rather than creating new ones each time."]}),"\n",(0,i.jsx)(n.p,{children:"You can also capture screenshots of specific UIView instances with either method."}),"\n",(0,i.jsx)(n.h2,{id:"config-options-reference",children:"Config Options Reference"}),"\n",(0,i.jsxs)(n.p,{children:["The SDK configuration is done using the ",(0,i.jsx)(n.code,{children:"CrowdinSDKConfig"})," class. The following options are available:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Example Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"hashString"})}),(0,i.jsx)(n.td,{children:"Distribution Hash"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"7a0c1...o3b"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sourceLanguage"})}),(0,i.jsxs)(n.td,{children:["Source language code (",(0,i.jsx)(n.a,{href:"http://www.loc.gov/standards/iso639-2/php/English_list.php",children:"ISO 639-1"}),")"]}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'sourceLanguage: "en"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"organizationName"})}),(0,i.jsx)(n.td,{children:"Organization domain (Enterprise only)"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"mycompany"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"settingsEnabled"})}),(0,i.jsxs)(n.td,{children:["Enable ",(0,i.jsx)(n.a,{href:"/advanced-features/sdk-controls",children:"SDK Controls"})]}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"screenshotsEnabled"})}),(0,i.jsx)(n.td,{children:"Enable Screenshots feature"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"accessToken"})}),(0,i.jsx)(n.td,{children:"Crowdin API access token"}),(0,i.jsx)(n.td,{children:"No*"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"your_token"'})})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Either ",(0,i.jsx)(n.code,{children:"accessToken"})," or ",(0,i.jsx)(n.a,{href:"#oauth-options",children:"OAuth configuration"})," is required."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"oauth-options",children:"OAuth Options"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"CrowdinLoginConfig"})," class provides OAuth configuration options:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Example"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientId"})}),(0,i.jsx)(n.td,{children:"OAuth Client ID"}),(0,i.jsx)(n.td,{children:"Yes*"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"gpY2yT...x3TYB"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientSecret"})}),(0,i.jsx)(n.td,{children:"OAuth Client Secret"}),(0,i.jsx)(n.td,{children:"Yes*"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Xz95t...EDx9T"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scope"})}),(0,i.jsx)(n.td,{children:'OAuth scope (must include "project.screenshot")'}),(0,i.jsx)(n.td,{children:"Yes*"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"project.screenshot"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"redirectURI"})}),(0,i.jsx)(n.td,{children:"Custom URL scheme for your app"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"crowdintest://"'})})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Required only if using OAuth authentication instead of access token."}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Read more about creating an ",(0,i.jsx)(n.a,{href:"https://support.crowdin.com/account-settings/#oauth",children:"OAuth application"})," in Crowdin."]})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"If you get the error:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Error while capturing screenshot - The operation couldn't be completed. (There are no localized strings detected on current screen. error 99999.)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Make sure that your ",(0,i.jsx)(n.strong,{children:"current locale"})," matches your project's ",(0,i.jsx)(n.strong,{children:"source (default) language"}),"."]})]})}function C(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}},9329:(e,n,r)=>{r.d(n,{A:()=>s});r(6540);var t=r(4164);const i={tabItem:"tabItem_Ymn6"};var o=r(4848);function s(e){let{children:n,hidden:r,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,s),hidden:r,children:n})}},5537:(e,n,r)=>{r.d(n,{A:()=>C});var t=r(6540),i=r(4164),o=r(5627),s=r(6347),a=r(372),l=r(604),c=r(1861),d=r(8749);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:i}}=e;return{value:n,label:r,attributes:t,default:i}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:r}=e;const i=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(i.location.search);n.set(o,e),i.replace({...i.location,search:n.toString()})}),[o,i])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,o=u(e),[s,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[c,h]=g({queryString:r,groupId:i}),[x,j]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,o]=(0,d.Dv)(r);return[i,(0,t.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:i}),f=(()=>{const e=c??x;return p({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),j(e)}),[h,j,o]),tabValues:o}}var j=r(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=r(4848);function m(e){let{className:n,block:r,selectedValue:t,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),i=a[r].value;i!==t&&(c(n),s(i))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:a.map((e=>{let{value:n,label:r,attributes:o}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{l.push(e)},onKeyDown:h,onClick:d,...o,className:(0,i.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:o}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function v(e){const n=x(e);return(0,w.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,w.jsx)(m,{...n,...e}),(0,w.jsx)(b,{...n,...e})]})}function C(e){const n=(0,j.A)();return(0,w.jsx)(v,{...e,children:h(e.children)},String(n))}},3895:(e,n,r)=>{r.d(n,{A:()=>t});const t="- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    return [CrowdinSDK handleWithUrl:url];\n}"},7271:(e,n,r)=>{r.d(n,{A:()=>t});const t="func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {\n    CrowdinSDK.handle(url: url)\n}"},5205:(e,n,r)=>{r.d(n,{A:()=>t});const t="- (void)scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts {\n    return [CrowdinSDK handleWithUrl:url];\n}"},5409:(e,n,r)=>{r.d(n,{A:()=>t});const t="func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n    guard let url = URLContexts.first?.url else { return }\n    CrowdinSDK.handle(url: url)\n}"}}]);