"use strict";(self.webpackChunk_crowdin_mobile_sdk_ios_website=self.webpackChunk_crowdin_mobile_sdk_ios_website||[]).push([[920],{9648:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"guides/sdk-structure","title":"SDK Structure","description":"Subspecs","source":"@site/docs/guides/sdk-structure.md","sourceDirName":"guides","slug":"/guides/sdk-structure","permalink":"/mobile-sdk-ios/guides/sdk-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/crowdin/mobile-sdk-ios/tree/master/website/docs/guides/sdk-structure.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Swift UI Localization guide","permalink":"/mobile-sdk-ios/guides/swift-ui"},"next":{"title":"Example Project","permalink":"/mobile-sdk-ios/example"}}');var t=n(4848),o=n(8453);const d={},r="SDK Structure",l={},a=[{value:"Subspecs",id:"subspecs",level:2},{value:"Core",id:"core",level:3},{value:"CrowdinProvider",id:"crowdinprovider",level:3},{value:"CrowdinAPI",id:"crowdinapi",level:3},{value:"MappingManager",id:"mappingmanager",level:3},{value:"Screenshots",id:"screenshots",level:3},{value:"RealtimeUpdate",id:"realtimeupdate",level:3},{value:"RefreshLocalization",id:"refreshlocalization",level:3},{value:"Login",id:"login",level:3},{value:"IntervalUpdate",id:"intervalupdate",level:3},{value:"Settings",id:"settings",level:3}];function c(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"sdk-structure",children:"SDK Structure"})}),"\n",(0,t.jsx)(i.h2,{id:"subspecs",children:"Subspecs"}),"\n",(0,t.jsxs)(i.p,{children:["CrowdinSDK divided into separate parts called subspecs. To install some of these parts via cocoapods you'll need to add ",(0,t.jsx)(i.code,{children:"pod 'CrowdinSDK/Subspec_Name'"})," in your pod file."]}),"\n",(0,t.jsx)(i.p,{children:"CrowdinSDK contains several submodules:"}),"\n",(0,t.jsx)(i.h3,{id:"core",children:"Core"}),"\n",(0,t.jsx)(i.p,{children:"This submodule contains core SDK functionality, such as functionality for switching localized strings, algorithms for current language detection."}),"\n",(0,t.jsxs)(i.p,{children:["This is the default submodule, which means if you set up SDK via cocapods with pod ",(0,t.jsx)(i.em,{children:"CrowdinSDK"})," this submodule will be included."]}),"\n",(0,t.jsx)(i.h3,{id:"crowdinprovider",children:"CrowdinProvider"}),"\n",(0,t.jsx)(i.p,{children:"Submodule for downloading localizations from the Crowdin server."}),"\n",(0,t.jsxs)(i.p,{children:["This is the default submodule, which means if you set up SDK via cocapods with pod ",(0,t.jsx)(i.em,{children:"CrowdinSDK"})," this submodule will be included by default."]}),"\n",(0,t.jsx)(i.h3,{id:"crowdinapi",children:"CrowdinAPI"}),"\n",(0,t.jsx)(i.p,{children:"Crowdin API implementation to work with the Crowdin server."}),"\n",(0,t.jsx)(i.h3,{id:"mappingmanager",children:"MappingManager"}),"\n",(0,t.jsx)(i.p,{children:"All classes related to strings mapping downloading and parsing. This subspec is used only as a dependency for realtime updates and screenshots subspecs."}),"\n",(0,t.jsx)(i.h3,{id:"screenshots",children:"Screenshots"}),"\n",(0,t.jsxs)(i.p,{children:["It contains all functionality related to Screenshots feature. To enable this feature please add pod ",(0,t.jsx)(i.code,{children:"CrowdinSDK/Screenshots"})," to your pod file."]}),"\n",(0,t.jsx)(i.h3,{id:"realtimeupdate",children:"RealtimeUpdate"}),"\n",(0,t.jsxs)(i.p,{children:["It contains all functionality related to the Real-Time Preview feature. To enable this feature please add pod ",(0,t.jsx)(i.code,{children:"CrowdinSDK/RealtimeUpdate"})," to your pod file."]}),"\n",(0,t.jsx)(i.h3,{id:"refreshlocalization",children:"RefreshLocalization"}),"\n",(0,t.jsxs)(i.p,{children:["It contains functionality to force refresh localization strings. To enable this feature please add pod ",(0,t.jsx)(i.code,{children:"CrowdinSDK/RefreshLocalization"})," to your pod file."]}),"\n",(0,t.jsx)(i.h3,{id:"login",children:"Login"}),"\n",(0,t.jsxs)(i.p,{children:["It contains login functionality. To enable this feature please add pod ",(0,t.jsx)(i.code,{children:"CrowdinSDK/Login"})," to your pod file."]}),"\n",(0,t.jsxs)(i.p,{children:["To set up this feature you need to setup create ",(0,t.jsx)(i.code,{children:"CrowdinLoginConfig"})," object and pass it to ",(0,t.jsx)(i.code,{children:"CrowdinSDKConfig"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"intervalupdate",children:"IntervalUpdate"}),"\n",(0,t.jsxs)(i.p,{children:["It contains functionality for update localization strings every defined time interval. To enable this feature please add pod ",(0,t.jsx)(i.code,{children:"CrowdinSDK/IntervalUpdate"})," to your pod file."]}),"\n",(0,t.jsx)(i.h3,{id:"settings",children:"Settings"}),"\n",(0,t.jsxs)(i.p,{children:["Submodule for testing all features. It contains a simple view with the possibility to enable/disable the following features: Force localization refresh, Interval localization updates, Real-time Preview, Screenshots. To enable this feature please add pod ",(0,t.jsx)(i.code,{children:"CrowdinSDK/Settings"})," to your pod file."]}),"\n",(0,t.jsxs)(i.p,{children:["To display settings view you can call ",(0,t.jsx)(i.code,{children:"CrowdinSDK.showSettings()"})," method for Swift and ",(0,t.jsx)(i.code,{children:"[CrowdinSDK showSettings]"})," for Objective-C. Note that you need to set up all features with ",(0,t.jsx)(i.code,{children:"CrowdinSDKConfig"})," object."]}),"\n",(0,t.jsx)(i.p,{children:"Settings view has two states: Closed and open."})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>r});var s=n(6540);const t={},o=s.createContext(t);function d(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);